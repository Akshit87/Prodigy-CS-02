from PIL import Image
import numpy as np
def encrypt_image(input_image_path, output_image_path, key):
    # Open the image
    image = Image.open(input_image_path)
    image_array = np.array(image)
    # Encrypt the image by adding the key to each pixel
    encrypted_array = (image_array + key) % 256
    # Convert the encrypted array back to an image
    encrypted_image = Image.fromarray(np.uint8(encrypted_array))
    encrypted_image.save(output_image_path)
    print(f"Image encrypted and saved to {output_image_path}")
def decrypt_image(input_image_path, output_image_path, key):
    # Open the encrypted image
    image = Image.open(input_image_path)
    image_array = np.array(image)
    # Decrypt the image by subtracting the key from each pixel
    decrypted_array = (image_array - key) % 256
    # Convert the decrypted array back to an image
    decrypted_image = Image.fromarray(np.uint8(decrypted_array))
    decrypted_image.save(output_image_path)
    print(f"Image decrypted and saved to {output_image_path}")
# Example usage
encrypt_image('path/to/your/input_image.png', 'path/to/save/encrypted_image.png', key=50)
decrypt_image('path/to/save/encrypted_image.png', 'path/to/save/decrypted_image.png', key=50)
